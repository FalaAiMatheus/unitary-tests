generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id Int @id @default(autoincrement())
  name String
  tissue String
  internalStructure String @map("internal_structure")
  baseBox String @map("base_box")
  heightOfFeet Int @map("height_of_feet")
  totalHeight Int @map("total_height")
  image String
  medicalMattressId Int @unique @map("medical_mattress_id")
  baseMeasurementId Int @unique @map("base_measurement_id")
  medicalMattress MedicalMattress? @relation(fields: [medicalMattressId], references: [id])
  baseMeasurement BaseMeasurement? @relation(fields: [baseMeasurementId], references: [id])
  order Order[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model MedicalMattress {
  id Int @id @default(autoincrement())
  height Int
  length Int
  width Int
  product Product[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model BaseMeasurement {
  id Int @id @default(autoincrement())
  height Int
  length Int
  width Int
  product Product[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Seller {
  id Int @id @default(autoincrement())
  name String
  email String
  contact Contact []
  order Order[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Contact {
  id Int @id @default(autoincrement())
  contactTypeId Int @unique @map("contact_type_id")
  contactType ContactType @relation(fields: [contactTypeId],references: [id])
  number String
  seller Seller[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model ContactType {
  id Int @id @default(autoincrement())
  name String
  contact Contact []
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Order {
  id Int @id @default(autoincrement())
  productId Int @unique @map("product_id")
  sellerId Int @unique @map("seller_id")
  price Float
  paymentType String @map("payment_type")
  commission Float?
  product Product @relation(fields: [productId], references: [id])
  seller Seller @relation(fields: [sellerId],references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}